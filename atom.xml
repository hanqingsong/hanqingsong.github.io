<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>青松的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.codr.top/"/>
  <updated>2018-03-07T06:45:48.000Z</updated>
  <id>http://www.codr.top/</id>
  
  <author>
    <name>qingsong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>joda-time工具类</title>
    <link href="http://www.codr.top/2017/12/joda-time%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>http://www.codr.top/2017/12/joda-time工具类/</id>
    <published>2017-12-04T01:38:00.000Z</published>
    <updated>2018-03-07T06:45:48.000Z</updated>
    
    <content type="html"><![CDATA[<!-- MarkdownTOC --><ul><li><a href="#%E6%95%B0%E6%8D%AE%E5%88%9D%E5%A7%8B%E5%8C%96">数据初始化</a></li><li><a href="#%E6%97%A5%E6%9C%9F%E5%B7%AE">日期差</a></li><li><a href="#%E6%A0%BC%E5%BC%8F%E5%8C%96">格式化</a></li><li><a href="#%E6%97%A5%E6%9C%9F%E8%AE%A1%E7%AE%97-plusminus">日期计算 plus/minus</a></li><li><a href="#%E6%97%B6%E9%97%B4%E6%AF%94%E8%BE%83-isbeforeisafter">时间比较 isBefore/isAfter</a></li><li><a href="#%E5%AE%98%E7%BD%91">官网</a></li></ul><!-- /MarkdownTOC --><h2 id="数据初始化"><a href="#数据初始化" class="headerlink" title="数据初始化"></a>数据初始化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">DateTime dateTimeNow = new DateTime();</div><div class="line">DateTime dateTimeNow = new DateTime(date);//java日期转DateTime</div><div class="line">DateTime recent = DateTime.parse(&quot;2017-05-18 17:40:00&quot;, DateTimeFormat.forPattern(&quot;yyyy-MM-dd HH:mm:ss&quot;)); //字符串转日期</div><div class="line">DateTime dateTime2 = new DateTime(2017,2,14,0,0,0);//年月日时分秒</div><div class="line">DateTime dateTime = DateTimeFormat.forPattern(&quot;yyyy-MM-dd HH:mm:ss&quot;).parseDateTime(&quot;2016-06-03 23:59:59&quot;);</div></pre></td></tr></table></figure><h2 id="日期差"><a href="#日期差" class="headerlink" title="日期差"></a>日期差</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">DateTime dt1 = new DateTime();</div><div class="line">DateTime dt2 = new DateTime().plus();</div><div class="line">System.out.print(&quot;时间相差：&quot;);</div><div class="line">System.out.print(Days.daysBetween(dt1, dt2).getDays() + &quot; 天 &quot;);</div><div class="line">System.out.print(Hours.hoursBetween(dt1, dt2).getHours() % 24 + &quot; 小时 &quot;);</div><div class="line">System.out.print(Minutes.minutesBetween(dt1, dt2).getMinutes() % 60 + &quot; 分钟 &quot;);</div><div class="line">System.out.print(Seconds.secondsBetween(dt1, dt2).getSeconds() % 60+ &quot; 秒.&quot;);</div></pre></td></tr></table></figure><h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">String s = new DateTime().toString(DateTimeFormat.forPattern(&quot;yyyy-MM-dd&quot;));</div><div class="line">String s2 = new DateTime().toString(&quot;yyyy-MM-dd&quot;)</div></pre></td></tr></table></figure><h2 id="日期计算-plus-minus"><a href="#日期计算-plus-minus" class="headerlink" title="日期计算 plus/minus"></a>日期计算 plus/minus</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">DateTime now = new DateTime();//当前时间</div><div class="line">DateTime tomorrowDt = now.plusDays(1);//明天</div><div class="line"></div><div class="line">int days = Days.daysBetween(now, tomorrowDt).getDays();</div><div class="line">System.out.println(days);//1</div></pre></td></tr></table></figure><h2 id="时间比较-isBefore-isAfter"><a href="#时间比较-isBefore-isAfter" class="headerlink" title="时间比较 isBefore/isAfter"></a>时间比较 isBefore/isAfter</h2><p>时间轴</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">现在 isbefore 明天 true</div><div class="line">boolean before = new DateTime().isBefore(new DateTime().plus(1));</div></pre></td></tr></table></figure><p>##官网<br><a href="http://www.joda.org/joda-time/userguide.html" target="_blank" rel="external">http://www.joda.org/joda-time/userguide.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- MarkdownTOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%95%B0%E6%8D%AE%E5%88%9D%E5%A7%8B%E5%8C%96&quot;&gt;数据初始化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#%E6%97%A5%E6%9C%9F%E5%B7
      
    
    </summary>
    
      <category term="java" scheme="http://www.codr.top/categories/java/"/>
    
    
      <category term="joda" scheme="http://www.codr.top/tags/joda/"/>
    
      <category term="java" scheme="http://www.codr.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>git使用记录</title>
    <link href="http://www.codr.top/2017/11/git%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://www.codr.top/2017/11/git使用记录/</id>
    <published>2017-11-15T03:27:06.000Z</published>
    <updated>2018-03-07T06:37:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">工作区 ---&gt;  暂存区 ----&gt;  （历史）本地分支  ---&gt;   远程分支  </div><div class="line">      add         commit                  push</div></pre></td></tr></table></figure><h2 id="工作区和暂存区"><a href="#工作区和暂存区" class="headerlink" title="工作区和暂存区"></a>工作区和暂存区</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">工作区：在电脑里能看到的目录</div><div class="line">版本库：工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。</div><div class="line">版本库里最重要的就是称为stage（或者叫index）的暂存区，(add操作)，</div><div class="line">还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD，（commit操作）。</div></pre></td></tr></table></figure><h2 id="分支创建与切换"><a href="#分支创建与切换" class="headerlink" title="分支创建与切换"></a>分支创建与切换</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git checkout -b dev #git checkout命令加上-b参数表示创建并切换</div><div class="line">相当于</div><div class="line">git branch dev #创建分支</div><div class="line">git checkout dev #切换分支</div><div class="line"></div><div class="line">git branch #查看分支</div></pre></td></tr></table></figure><h2 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git branch -d dev</div></pre></td></tr></table></figure><h2 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h2><p>fast-forward 快速合并不产生合并节点，看不出来曾经做过合并<br>no-ff 合并生成合并节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git merge dev #git merge命令用于合并指定分支到当前分支</div><div class="line"></div><div class="line">git merge --no-ff -m &quot;merge with no-ff&quot; dev #合并生成合并节点</div></pre></td></tr></table></figure><h2 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git log #查看日志</div><div class="line">git log --graph --pretty=oneline --abbrev-commit #图形查看日志</div></pre></td></tr></table></figure><h2 id="版本回退和恢复"><a href="#版本回退和恢复" class="headerlink" title="版本回退和恢复"></a>版本回退和恢复</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">回退工作区修改文件</div><div class="line">git checkout -- &lt;file&gt; </div><div class="line"></div><div class="line">回退暂存区修改文件（add操作）</div><div class="line">git reset HEAD &lt;file&gt;</div><div class="line">git checkout -- &lt;file&gt; </div><div class="line"></div><div class="line">回退本地分支修改文件 （add commit操作）</div><div class="line">git reset --hard HEAD^ #git reset HEAD~2</div><div class="line"></div><div class="line">恢复git reflog </div><div class="line">git reflog </div><div class="line">git reset --hard 0a1f420</div></pre></td></tr></table></figure><h2 id="暂时储藏修改"><a href="#暂时储藏修改" class="headerlink" title="暂时储藏修改"></a>暂时储藏修改</h2><p>当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git stash  #储藏代码</div><div class="line">git stash list #查看列表</div><div class="line">git stash pop #回到工作现场</div></pre></td></tr></table></figure></p><h2 id="Reset、Checkout、Revert-的选择"><a href="#Reset、Checkout、Revert-的选择" class="headerlink" title="Reset、Checkout、Revert 的选择"></a>Reset、Checkout、Revert 的选择</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">reset 将一个分支的末端指向另一个提交。</div><div class="line">--soft – 缓存区和工作目录都不会被改变</div><div class="line">--mixed – 默认选项。缓存区和你指定的提交同步，但工作目录不受影响</div><div class="line">--hard – 缓存区和工作目录都同步到你指定的提交</div><div class="line"></div><div class="line">checkout 除了分支之外，你还可以传入提交的引用来 checkout 到任意的提交。</div><div class="line">git checkout HEAD~2</div><div class="line"></div><div class="line">Revert 撤销一个提交的同时会创建一个新的提交,相比 git reset，它不会改变现在的提交历史。因此，git revert 可以用在公共分支上，git reset 应该用在私有分支上。你也可以把 git revert 当作撤销已经提交的更改，而 git reset HEAD 用来撤销没有提交的更改。</div></pre></td></tr></table></figure><h2 id="git修改远程仓库地址方法有三种："><a href="#git修改远程仓库地址方法有三种：" class="headerlink" title="git修改远程仓库地址方法有三种："></a>git修改远程仓库地址方法有三种：</h2><p>查看远程地址git remote -v</p><ol><li>修改命令 </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote set-url origin [url]</div></pre></td></tr></table></figure><ol><li>先删后加</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git remote rm origin</div><div class="line">git remote add origin [url]</div></pre></td></tr></table></figure><ol><li>直接修改config文件</li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000</a><br><a href="https://github.com/geeeeeeeeek/git-recipes/wiki/5.2-%E4%BB%A3%E7%A0%81%E5%9B%9E%E6%BB%9A%EF%BC%9AReset%E3%80%81Checkout%E3%80%81Revert-%E7%9A%84%E9%80%89%E6%8B%A9" target="_blank" rel="external">https://github.com/geeeeeeeeek/git-recipes/wiki/5.2-%E4%BB%A3%E7%A0%81%E5%9B%9E%E6%BB%9A%EF%BC%9AReset%E3%80%81Checkout%E3%80%81Revert-%E7%9A%84%E9%80%89%E6%8B%A9</a><br><a href="https://github.com/geeeeeeeeek/git-recipes/wiki" target="_blank" rel="external">https://github.com/geeeeeeeeek/git-recipes/wiki</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;流程&quot;&gt;&lt;a href=&quot;#流程&quot; class=&quot;headerlink&quot; title=&quot;流程&quot;&gt;&lt;/a&gt;流程&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div c
      
    
    </summary>
    
      <category term="工具" scheme="http://www.codr.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="git" scheme="http://www.codr.top/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令常用记录</title>
    <link href="http://www.codr.top/2017/10/Linux%E5%91%BD%E4%BB%A4%E5%B8%B8%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
    <id>http://www.codr.top/2017/10/Linux命令常用记录/</id>
    <published>2017-10-25T06:40:06.000Z</published>
    <updated>2018-03-07T06:48:54.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li>创建多级文件夹 mkdir -p test1/test2/test3</li><li>修改权限包含子目录 chown -R </li><li>创建软连接 ln [参数][源文件或目录][目标文件或目录] ln -s xx.log xxf.log</li><li>递归拷贝这些及其子文件夹下的文件 cp -ri</li><li>查看文件夹下文件大小 du -h –max-depth=1 /mydata/ </li><li>清屏 clear</li><li>查看shell cat /etc/shells</li><li>查看使用的shell echo $SHELL</li><li>查看本地端口 netstat -ntlp</li><li></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;创建多级文件夹 mkdir -p test1/test2/test3&lt;/li&gt;
&lt;li&gt;修改权限包含子目录 chown -R &lt;/li&gt;
&lt;li&gt;创建软连接 ln [参数][源文件或目录][目标文件或目录] ln -s xx.log xxf.log&lt;/li&gt;
&lt;
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.codr.top/categories/Linux/"/>
    
    
      <category term="命令" scheme="http://www.codr.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令:Http请求get和post</title>
    <link href="http://www.codr.top/2017/10/Linux%E5%91%BD%E4%BB%A4-Http%E8%AF%B7%E6%B1%82get%E5%92%8Cpost/"/>
    <id>http://www.codr.top/2017/10/Linux命令-Http请求get和post/</id>
    <published>2017-10-24T11:40:19.000Z</published>
    <updated>2018-03-07T06:46:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、get请求："><a href="#一、get请求：" class="headerlink" title="一、get请求："></a>一、get请求：</h2><p>　　1、使用curl命令：<br>　　curl “<a href="http://www.baidu.com”" target="_blank" rel="external">http://www.baidu.com”</a> 如果这里的URL指向的是一个文件或者一幅图都可以直接下载到本地<br>　　curl -i “<a href="http://www.baidu.com”" target="_blank" rel="external">http://www.baidu.com”</a> 显示全部信息<br>　　curl -l “<a href="http://www.baidu.com”" target="_blank" rel="external">http://www.baidu.com”</a> 只显示头部信息<br>　　curl -v “<a href="http://www.baidu.com”" target="_blank" rel="external">http://www.baidu.com”</a> 显示get请求全过程解析<br>　　2、使用wget命令：<br>　　wget “<a href="http://www.baidu.com”也可以" target="_blank" rel="external">http://www.baidu.com”也可以</a></p><h2 id="二、post请求"><a href="#二、post请求" class="headerlink" title="二、post请求"></a>二、post请求</h2><p>　　1、使用curl命令（通过-d参数，把访问参数放在里面）：<br>　　curl -d “param1=value1¶m2=value2” “<a href="http://www.baidu.com”" target="_blank" rel="external">http://www.baidu.com”</a><br>　　2、使用wget命令：（–post-data参数来实现）<br>　　wget –post-data ‘user=foo&amp;password=bar’ <a href="http://www.baidu.com" target="_blank" rel="external">http://www.baidu.com</a><br>　　以上就是Linux模拟Http的get或post请求的方法了，这样一来Linux系统也能向远程服务器发送消息了。  </p><pre><code>示例：wget --post-data=&quot;&quot;  http://mcs-inner.99bill.com/mcs-gateway/mcs/task/clear</code></pre><h2 id="三、curl-可直接发送格式化请求例如json"><a href="#三、curl-可直接发送格式化请求例如json" class="headerlink" title="三、curl (可直接发送格式化请求例如json)"></a>三、curl (可直接发送格式化请求例如json)</h2><pre><code>示例：目标url:http://fsc-inner.99bill.com/acs/deposit/{srcRef}命令：curl -H &quot;Content-type: application/json&quot; -X POST -d &apos;{&quot;srcRef&quot;:&quot;1002&quot;}&apos;http://fsc-inner.99bill.com/acs/deposit/1002</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://blog.csdn.net/ai2000ai/article/details/56290142" target="_blank" rel="external">http://blog.csdn.net/ai2000ai/article/details/56290142</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、get请求：&quot;&gt;&lt;a href=&quot;#一、get请求：&quot; class=&quot;headerlink&quot; title=&quot;一、get请求：&quot;&gt;&lt;/a&gt;一、get请求：&lt;/h2&gt;&lt;p&gt;　　1、使用curl命令：&lt;br&gt;　　curl “&lt;a href=&quot;http://www.b
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.codr.top/categories/Linux/"/>
    
    
      <category term="命令" scheme="http://www.codr.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>升级jdk1.8报错：sun.security.validator.ValidatorException: Certificate signature algorithm disabled</title>
    <link href="http://www.codr.top/2017/10/%E5%8D%87%E7%BA%A7jdk1-8%E6%8A%A5%E9%94%99%EF%BC%9Asun-security-validator-ValidatorException-Certificate-signature/"/>
    <id>http://www.codr.top/2017/10/升级jdk1-8报错：sun-security-validator-ValidatorException-Certificate-signature/</id>
    <published>2017-10-24T06:09:20.000Z</published>
    <updated>2018-03-07T06:48:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="升级jdk1-8项目出错"><a href="#升级jdk1-8项目出错" class="headerlink" title="升级jdk1.8项目出错"></a>升级jdk1.8项目出错</h3><p>sun.security.validator.ValidatorException: Certificate signature algorithm disabled</p><p>报错原因是JDK8对SSL证书的算法安全要求提高，可以对比下7和8的区别<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">less /Library/Java/JavaVirtualMachines/jdk1.7.0_80.jdk/Contents/Home/jre/lib/security/java.security|grep disabledAlgorithms |grep -v &quot;#&quot;</div><div class="line">jdk.certpath.disabledAlgorithms=MD2, RSA keySize &lt; 1024</div><div class="line">jdk.tls.disabledAlgorithms=SSLv3</div><div class="line"></div><div class="line">less /Library/Java/JavaVirtualMachines/jdk1.8.0_*/Contents/Home/jre/lib/security/java.security|grep disabledAlgorithms |grep -v &quot;#&quot;</div><div class="line">jdk.certpath.disabledAlgorithms=MD2, MD5, SHA1 jdkCA &amp; usage TLSServer, \</div><div class="line">jdk.jar.disabledAlgorithms=MD2, MD5, RSA keySize &lt; 1024</div><div class="line">jdk.tls.disabledAlgorithms=SSLv3, RC4, MD5withRSA, DH keySize &lt; 768, \</div></pre></td></tr></table></figure></p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><ol><li>简单做法是直接注释掉jdk.certpath.disabledAlgorithms</li><li>继承新的抽象类：X509ExtendedTrustManager<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">In the Java SE 7 release, the X509ExtendedTrustManager class is an abstract implementation of the X509TrustManager interface. It adds methods for connection-sensitive trust management. In addition, it enables endpoint verification at the TLS layer.</div><div class="line">...</div><div class="line">Besides TLS 1.2 support, the X509ExtendedTrustManager class also support algorithm constraints and SSL layer hostname verification.</div></pre></td></tr></table></figure></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.cnblogs.com/flyingeagle/articles/7508207.html" target="_blank" rel="external">http://www.cnblogs.com/flyingeagle/articles/7508207.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;升级jdk1-8项目出错&quot;&gt;&lt;a href=&quot;#升级jdk1-8项目出错&quot; class=&quot;headerlink&quot; title=&quot;升级jdk1.8项目出错&quot;&gt;&lt;/a&gt;升级jdk1.8项目出错&lt;/h3&gt;&lt;p&gt;sun.security.validator.Validat
      
    
    </summary>
    
      <category term="java" scheme="http://www.codr.top/categories/java/"/>
    
    
      <category term="jdk" scheme="http://www.codr.top/tags/jdk/"/>
    
      <category term="问题" scheme="http://www.codr.top/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>EFK-从零搭建日志系统</title>
    <link href="http://www.codr.top/2017/10/EFK-%E4%BB%8E%E9%9B%B6%E6%90%AD%E5%BB%BA%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    <id>http://www.codr.top/2017/10/EFK-从零搭建日志系统/</id>
    <published>2017-10-19T10:57:32.000Z</published>
    <updated>2018-03-07T06:47:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>日志需要包含字段：</p><ol><li>time</li><li>level</li><li>app_id</li><li>instance_id<br>日志从产生到消费，主要经历以下几个阶段：采集-&gt;传输-&gt;切分-&gt;检索。</li></ol><h2 id="区分实例-instance-id"><a href="#区分实例-instance-id" class="headerlink" title="区分实例 instance_id"></a>区分实例 instance_id</h2><p>通过设置filebeat</p><h2 id="系统搭建"><a href="#系统搭建" class="headerlink" title="系统搭建"></a>系统搭建</h2><h3 id="Filebeat-安装"><a href="#Filebeat-安装" class="headerlink" title="Filebeat 安装"></a>Filebeat 安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-5.0.2-x86_64.rpm</div><div class="line">rpm -vi filebeat-5.0.2-x86_64.rpm</div><div class="line"></div><div class="line">vim /etc/filebeat/filebeat.yml</div><div class="line">修改 output.elasticsearch hosts </div><div class="line">添加模板</div><div class="line">output.elasticsearch:</div><div class="line">  hosts: [&quot;localhost:9200&quot;]</div><div class="line">  template.name: &quot;filebeat&quot;</div><div class="line">  template.path: &quot;filebeat.template.json&quot;</div><div class="line">  template.overwrite: false</div><div class="line">启动</div><div class="line">/etc/init.d/filebeat start</div><div class="line">service filebeat start</div></pre></td></tr></table></figure><h3 id="elasticsearch-安装"><a href="#elasticsearch-安装" class="headerlink" title="elasticsearch 安装"></a>elasticsearch 安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.3.rpm</div><div class="line">sha1sum elasticsearch-5.6.3.rpm </div><div class="line">sudo rpm --install elasticsearch-5.6.3.rpm</div><div class="line"></div><div class="line">### NOT starting on installation, please execute the following statements to configure elasticsearch service to start automatically using chkconfig</div><div class="line"> sudo chkconfig --add elasticsearch</div><div class="line">### You can start elasticsearch service by executing</div><div class="line"> sudo service elasticsearch start</div><div class="line"></div><div class="line">service elasticsearch start</div></pre></td></tr></table></figure><p>启动异常：Starting elasticsearch: Elasticsearch requires at least Java 8 but your Java version from /usr/bin/java does not meet this requirement 原因是java8安装，java版本管理工具没有更改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">ll /usr/bin/java</div><div class="line">/usr/bin/java -&gt; /etc/alternatives/java</div><div class="line"></div><div class="line">update-alternatives --config java</div><div class="line"></div><div class="line">update-alternatives --install /usr/bin/java java /usr/local/java/jdk/jdk1.8.0_112/bin/java 300</div><div class="line">update-alternatives --install /usr/bin/javac javac /usr/local/java/jdk/jdk1.8.0_112/bin/javac 300</div></pre></td></tr></table></figure></p><p>验证是否成功 curl <a href="http://localhost:9200/" target="_blank" rel="external">http://localhost:9200/</a></p><h3 id="安装Kibana"><a href="#安装Kibana" class="headerlink" title="安装Kibana"></a>安装Kibana</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">wget https://artifacts.elastic.co/downloads/kibana/kibana-5.6.3-i686.rpm</div><div class="line">sha1sum kibana-5.6.3-i686.rpm </div><div class="line">sudo rpm --install kibana-5.6.3-i686.rpm</div><div class="line"></div><div class="line">service kibana start</div><div class="line">service kibana stop</div><div class="line"></div><div class="line">访问 http://localhost:5601</div></pre></td></tr></table></figure><h3 id="修改日志收集路径"><a href="#修改日志收集路径" class="headerlink" title="修改日志收集路径"></a>修改日志收集路径</h3><p>vim /etc/elasticsearch/elasticsearch.yml<br>设置<br>path.data: /mydata/elk/elasticsearch/data<br>path.logs: /mydata/elk/elasticsearch/logs<br>如果重启会报错<br>detected index data in default.path.data [/var/lib/elasticsearch/nodes/0/indices] where there should not be any<br>需要把/var/lib/elasticsearch/下的文件夹移动到/mydata/elk/elasticsearch/下，<em>删除</em>/var/lib/elasticsearch/</p><h3 id="kibana使用"><a href="#kibana使用" class="headerlink" title="kibana使用"></a>kibana使用</h3><h4 id="Lucene-query-syntax"><a href="#Lucene-query-syntax" class="headerlink" title="Lucene query syntax"></a>Lucene query syntax</h4><ul><li>简单的文本搜索，直接输入文本字符串。比如，如果你在搜索网站服务器日志，你可以输入 safari 来搜索各字段中的 safari 单词。</li><li>要搜索特定字段中的值，则在值前加上字段名。比如，你可以输入 status:200 来限制搜索结果都是在 status 字段里有 200 内容。</li><li>要搜索一个值的范围，你可以用范围查询语法，[START_VALUE TO END_VALUE]。比如，要查找 4xx 的状态码，你可以输入 status:[400 TO 499]。</li><li>要指定更复杂的搜索标准，你可以用布尔操作符 AND, OR, 和 NOT。比如，要查找 4xx 的状态码，还是 php 或 html 结尾的数据，你可以输入 status:[400 TO 499] AND (extension:php OR extension:html)。</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://mp.weixin.qq.com/s/onrBwQ0vyLJYWD_FRnNjEg" target="_blank" rel="external">https://mp.weixin.qq.com/s/onrBwQ0vyLJYWD_FRnNjEg</a><br>ELKstack 中文指南：<a href="https://kibana.logstash.es/content/kibana/v5/discover.html" target="_blank" rel="external">https://kibana.logstash.es/content/kibana/v5/discover.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;日志需要包含字段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;time&lt;/li&gt;
&lt;li&gt;level&lt;/li&gt;
&lt;li&gt;app_id&lt;/li&gt;
&lt;li&gt;in
      
    
    </summary>
    
      <category term="ELK" scheme="http://www.codr.top/categories/ELK/"/>
    
    
      <category term="日志系统" scheme="http://www.codr.top/tags/%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="ELK" scheme="http://www.codr.top/tags/ELK/"/>
    
  </entry>
  
  <entry>
    <title>Linux 命令：统计命令</title>
    <link href="http://www.codr.top/2017/10/Linux%E5%91%BD%E4%BB%A4%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.codr.top/2017/10/Linux命令：统计命令/</id>
    <published>2017-10-18T11:58:23.000Z</published>
    <updated>2018-01-11T07:54:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>一些实用的Linux文本操作命令，包括wc(统计)、cut(切分)、sort(排序)、uniq(去重)、grep(查找)、sed(替换、插入、删除)、awk(文本分析)。</p><h2 id="wc-统计"><a href="#wc-统计" class="headerlink" title="wc(统计)"></a>wc(统计)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># wc [-lwm]</div><div class="line">选项与参数：</div><div class="line">-l  ：仅列出行；</div><div class="line">-w  ：仅列出多少字(英文单字)；</div><div class="line">-m  ：多少字符；</div></pre></td></tr></table></figure><h2 id="cut-切分"><a href="#cut-切分" class="headerlink" title="cut(切分)"></a>cut(切分)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">cut  [-bn] [file] 或 cut [-c] [file]  或  cut [-df] [file]</div><div class="line">　　使用说明</div><div class="line">　　cut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。</div><div class="line">　　如果不指定 File 参数，cut 命令将读取标准输入。必须指定 -b、-c 或 -f 标志之一。</div><div class="line"></div><div class="line">　　主要参数</div><div class="line">　　-b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。</div><div class="line">　　-c ：以字符为单位进行分割。</div><div class="line">　　-d ：自定义分隔符，默认为制表符。</div><div class="line">　　-f ：与-d一起使用，指定显示哪个区域。</div><div class="line">　　-n ：取消分割多字节字符。仅和 -b 标志一起使用。如果字符的最后一个字节落在由 -b 标志的 List 参数指示的&lt;br /&gt;范围之内，该字符将被写出；否则，该字符将被排除。</div></pre></td></tr></table></figure><h2 id="sort-排序"><a href="#sort-排序" class="headerlink" title="sort(排序)"></a>sort(排序)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">　　sort命令是帮我们依据不同的数据类型进行排序，其语法及常用参数格式：</div><div class="line"></div><div class="line">sort [-bcfMnrtk][源文件][-o 输出文件] </div><div class="line">　　补充说明：sort可针对文本文件的内容，以行为单位来排序。</div><div class="line"></div><div class="line">　　参数：</div><div class="line">　　-b   忽略每行前面开始出的空格字符。</div><div class="line">　　-c   检查文件是否已经按照顺序排序。</div><div class="line">　　-f   排序时，忽略大小写字母。</div><div class="line">　　-M   将前面3个字母依照月份的缩写进行排序。</div><div class="line">　　-n   依照数值的大小排序。</div><div class="line">　　-o&lt;输出文件&gt;   将排序后的结果存入指定的文件。</div><div class="line">　　-r   以相反的顺序来排序。</div><div class="line">　　-t&lt;分隔字符&gt;   指定排序时所用的栏位分隔字符。</div><div class="line">　　-k  选择以哪个区间进行排序。</div></pre></td></tr></table></figure><h2 id="uniq-去重"><a href="#uniq-去重" class="headerlink" title="uniq(去重)"></a>uniq(去重)</h2><p>uniq命令可以去除排序过的文件中的重复行，因此uniq经常和sort合用。也就是说，为了使uniq起作用，所有的重复行必须是相邻的。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># uniq [-icu]</div><div class="line">选项与参数：</div><div class="line">-i   ：忽略大小写字符的不同；</div><div class="line">-c  ：进行计数</div><div class="line">-u  ：只显示唯一的行</div></pre></td></tr></table></figure></p><h2 id="grep-查找"><a href="#grep-查找" class="headerlink" title="grep(查找)"></a>grep(查找)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">Linux系统中grep命令是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹 配的行打印出来。grep全称是Global Regular Expression Print，表示全局正则表达式版本，它的使用权限是所有用户。</div><div class="line"></div><div class="line">grep [options]</div><div class="line">　　主要参数</div><div class="line">　　[options]主要参数：</div><div class="line">　　－c：只输出匹配行的计数。</div><div class="line">　　－I：不区分大 小写(只适用于单字符)。</div><div class="line">　　－h：查询多文件时不显示文件名。</div><div class="line">　　－l：查询多文件时只输出包含匹配字符的文件名。</div><div class="line">　　－n：显示匹配行及 行号。</div><div class="line">　　－s：不显示不存在或无匹配文本的错误信息。</div><div class="line">　　－v：显示不包含匹配文本的所有行。</div><div class="line">    -E：使用正则</div><div class="line">　　pattern正则表达式主要参数：</div><div class="line">　　\： 忽略正则表达式中特殊字符的原有含义。</div><div class="line">　　^：匹配正则表达式的开始行。</div><div class="line">　　$: 匹配正则表达式的结束行。</div><div class="line">　　\&lt;：从匹配正则表达 式的行开始。</div><div class="line">　　\&gt;：到匹配正则表达式的行结束。</div><div class="line">　　[ ]：单个字符，如[A]即A符合要求 。</div><div class="line">　　[ - ]：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。</div><div class="line">　　。：所有的单个字符。</div><div class="line">　　* ：有字符，长度可以为0。</div></pre></td></tr></table></figure><h2 id="sed-替换、插入、删除"><a href="#sed-替换、插入、删除" class="headerlink" title="sed(替换、插入、删除)"></a>sed(替换、插入、删除)</h2><p>sed是一个很好的文件处理工具，本身是一个管道命令，主要是以行为单位进行处理，可以将数据行进行替换、删除、新增、选取等特定工作，下面先了解一下sed的用法。sed命令行格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">sed [-nefri] ‘command’ 输入文本 </div><div class="line">　　常用选项：</div><div class="line">　　  -n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN的资料一般都会被列出到萤幕上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。</div><div class="line">        -e∶直接在指令列模式上进行 sed 的动作编辑；</div><div class="line">        -f∶直接将 sed 的动作写在一个档案内， -f filename 则可以执行 filename 内的sed 动作；</div><div class="line">        -r∶sed 的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)</div><div class="line">        -i∶直接修改读取的档案内容，而不是由萤幕输出。       </div><div class="line"></div><div class="line">　　常用命令：</div><div class="line">        a   ∶新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～</div><div class="line">        c   ∶取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！</div><div class="line">        d   ∶删除，因为是删除啊，所以 d 后面通常不接任何咚咚；</div><div class="line">　　   i   ∶插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；</div><div class="line">　　  p  ∶列印，亦即将某个选择的资料印出。通常 p 会与参数 sed -n 一起运作～</div><div class="line">　　  s  ∶取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 1,20s/old/new/g 就是啦！</div></pre></td></tr></table></figure></p><h3 id="sed-提取匹配的字符串内容"><a href="#sed-提取匹配的字符串内容" class="headerlink" title="sed 提取匹配的字符串内容"></a>sed 提取匹配的字符串内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># STR=&quot;MAIL FROM(CCC) TO(DDD)&quot;</div><div class="line"># echo $STR | sed &apos;s/^.*FROM(\(.*\)).*TO(\(.*\)).*$/\1-\2/g&apos;</div><div class="line">CCC-DDD</div></pre></td></tr></table></figure><p>s表示替换，组匹配信息(.*),第一个为\1,第二个\2以此类推</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&quot;09/Jan/2018:00:02:58 +0800&quot;,&quot;210.22.172.146&quot;,&quot;-&quot;,&quot;-&quot;,&quot;-&quot;,&quot;api.fastschool.cn&quot;,&quot;ded92c009aaa4582a6cf9b644fa62aa6&quot;,&quot;GET /clog/a.gif?action=FS_UploadLog&amp;clientIp=%28null%29&amp;clientVersion=3.8.7&amp;debugInfo=20180108__NumOfLine_117_&amp;logType=debug&amp;logVersion=1.0&amp;netType=wifi&amp;osName=iPad&amp;osVersion=10.3&amp;platform=iOS&amp;tag=FSUploadLog&amp;ts=2018-01-09%2000%3A02%3A56.784&amp;userLid=a91e0cffbe474635b8ec4861a58b1a97&amp;userToken=ded92c009aaa4582a6cf9b644fa62aa6&amp;wifiName=TP-LINK_BF2AF0 HTTP/1.1&quot;,&quot;-&quot;,&quot;-&quot;,&quot;prod:stu_cli, channel:AppStore, os:iOS, osVer:10.3.3, mobile:iPad, vName:3.8.7, env:RE&quot;,&quot;200&quot;,&quot;0.000&quot;,&quot;0&quot;,&quot;-&quot;,&quot;-&quot;,&quot;*/*&quot;,&quot;nginx-111&quot;,&quot;-&quot;</div><div class="line"></div><div class="line"># less loginfo.txt |awk -F&apos;&quot;,&quot;&apos; &apos;&#123;print $8&#125;&apos; |sed &apos;s/^.*\(action=[a-zA-Z_]*\).*\(platform=[a-zA-Z_]*\).*$/\1  \2/g&apos;</div><div class="line"></div><div class="line">action=FS_StartUploadLog_ToCOS  platform=iOS</div></pre></td></tr></table></figure><h2 id="awk-文本分析"><a href="#awk-文本分析" class="headerlink" title="awk(文本分析)"></a>awk(文本分析)</h2><p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">awk &apos;&#123;pattern + action&#125;&apos; &#123;filenames&#125;</div></pre></td></tr></table></figure></p><p>尽管操作可能会很复杂，但语法总是这样，其中 pattern 表示 AWK 在数据中查找的内容，而 action 是在找到匹配内容时所执行的一系列命令。花括号（{}）不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。 pattern就是要表示的正则表达式，用斜杠括起来。</p><p>　　awk语言的最基本功能是在文件或者字符串中基于指定规则浏览和抽取信息，awk抽取信息后，才能进行其他文本操作。完整的awk脚本通常用来格式化文本文件中的信息。</p><p>　　通常，awk是以文件的一行为处理单位的。awk每接收文件的一行，然后执行相应的命令，来处理文本。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>博客出处：<a href="http://www.cnblogs.com/maybe2030/" target="_blank" rel="external">http://www.cnblogs.com/maybe2030/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一些实用的Linux文本操作命令，包括wc(统计)、cut(切分)、sort(排序)、uniq(去重)、grep(查找)、sed(替换、插入、删除)、awk(文本分析)。&lt;/p&gt;
&lt;h2 id=&quot;wc-统计&quot;&gt;&lt;a href=&quot;#wc-统计&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.codr.top/categories/Linux/"/>
    
    
      <category term="命令" scheme="http://www.codr.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>iterm2使用技巧</title>
    <link href="http://www.codr.top/2017/10/iterm2%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://www.codr.top/2017/10/iterm2使用技巧/</id>
    <published>2017-10-17T02:50:50.000Z</published>
    <updated>2017-10-18T11:38:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用快捷键"><a href="#使用快捷键" class="headerlink" title="使用快捷键"></a>使用快捷键</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">⌘ + 数字: 切换标签页。 </div><div class="line">⌘ + 方向键 按方向切换标签页。</div><div class="line">⌘ + enter: 切换全屏</div><div class="line">⌘ + f: 查找。支持正则。其中查找的内容会被自动复制。鼠标去选中的内容也会自动复制</div><div class="line">⌘ + d: 垂直分屏，⌘ + shift + d: 水平分屏。使用⌘ + ]和⌘ + [在最近使用的分屏直接切换.</div><div class="line">⌘ + t :新的标签页</div><div class="line">⌘ + w :关闭当前标签页</div><div class="line">⌘ + ；:自动补全历史命令</div><div class="line">⌘ + —/+/0: 调整字体大小</div><div class="line">⌘ + /: 找到当前光标位置</div></pre></td></tr></table></figure><h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ctrl + u: 清空当前行。</div><div class="line">ctrl + a: 到行首</div><div class="line">ctrl + e: 行末</div><div class="line">ctrl + f/b: 前进后退，相当于左右方向键</div><div class="line">ctrl + p: 上一条命令，相当于方向键上</div><div class="line">ctrl + r: 搜索命令历史</div><div class="line">ctrl + d: 删除当前字符</div><div class="line">ctrl + h: 删除之前的字符</div><div class="line">ctrl + w: 删除光标前的单词</div><div class="line">ctrl + k: 删除到文本末尾</div><div class="line">ctrl + t: 交换光标处文本</div><div class="line">⌘ + r:清屏，其实是滚到新的一屏，并没有清空。ctrl + l 也可以做到。</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用快捷键&quot;&gt;&lt;a href=&quot;#使用快捷键&quot; class=&quot;headerlink&quot; title=&quot;使用快捷键&quot;&gt;&lt;/a&gt;使用快捷键&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="工具" scheme="http://www.codr.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="iterm2" scheme="http://www.codr.top/tags/iterm2/"/>
    
      <category term="mac" scheme="http://www.codr.top/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Linux 命令：压缩命令</title>
    <link href="http://www.codr.top/2017/10/Linux-%E5%91%BD%E4%BB%A4%EF%BC%9A%E5%8E%8B%E7%BC%A9%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.codr.top/2017/10/Linux-命令：压缩命令/</id>
    <published>2017-10-14T01:45:11.000Z</published>
    <updated>2017-10-18T11:38:55.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>tar命令<br>　　解包：tar zxvf FileName.tar<br> 解包到指定文件夹：tar zxvf FileName.tar -C dirname<br>　　打包：tar czvf FileName.tar DirName</p></li><li><p>gz命令<br>　　解压：gunzip FileName.gz<br>　　解压：gzip -d FileName.gz<br> 压缩：gzip FileName</p></li><li><p>tar.gz<br> 解压：tar zxvf FileName.tar.gz<br>　　 压缩：tar zcvf FileName.tar.gz DirName<br> 压缩多个文件：tar zcvf FileName.tar.gz DirName1 DirName2 DirName3</p></li><li><p>zip命令<br>　　解压：unzip FileName.zip<br> 解压到指定目录：unzip -d /home/sunny myfile.zip<br>　　压缩：zip -r FileName.zip DirName</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;tar命令&lt;br&gt;　　解包：tar zxvf FileName.tar&lt;br&gt; 解包到指定文件夹：tar zxvf FileName.tar -C dirname&lt;br&gt;　　打包：tar czvf FileName.tar DirName&lt;/p&gt;
&lt;/li
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.codr.top/categories/Linux/"/>
    
    
      <category term="命令" scheme="http://www.codr.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Linux 命令：统计分析日志</title>
    <link href="http://www.codr.top/2017/10/Linux-%E5%91%BD%E4%BB%A4%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90%E6%97%A5%E5%BF%97/"/>
    <id>http://www.codr.top/2017/10/Linux-命令：统计分析日志/</id>
    <published>2017-10-14T01:45:11.000Z</published>
    <updated>2018-03-07T06:47:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>liunx服务器上生成的日志文件进行分析，文件格式如下：<br>id               time<br>1001,2011-08-19 00:00:00<br>1002,2011-08-19 01:00:00<br>1001,2011-08-19 02:00:00<br>1003,2011-08-19 03:00:00</p><h2 id="linux命令如下："><a href="#linux命令如下：" class="headerlink" title="linux命令如下："></a>linux命令如下：</h2><p>排重后id个数</p><pre><code>cat ****.txt  | awk &apos;{print $1}&apos;  |  sort | uniq -c | wc -l</code></pre><p>按id出现次数排序</p><pre><code>cat ****.txt  | awk &apos;{print $1}&apos;  |  sort | uniq -c | sort -k 1 -n -r | wc -l</code></pre><p>将结果导入文件</p><pre><code>cat ****.txt  | awk &apos;{print $1}&apos;  |  sort | uniq -c | sort -k 1 -n -r | wc -l &gt; result.txt</code></pre><h2 id="命令解析："><a href="#命令解析：" class="headerlink" title="命令解析："></a>命令解析：</h2><p>sort：表示前面输入的结果文件中的内容进行排序。sort命令是对于每一行的内容根据字典序（ASCII码）进行排序，这样可以保证重复的记录时相邻的。</p><p>awk ‘{print $1}’ ：日志记录中的第一个字段。</p><p>uniq –c：表示合并相邻的重复记录，并统计重复数。因为uniq -c 只会合并相邻的记录，所以在使用该命令之前需要先排序。</p><p>sort –k 1 -n -r|wc –l：经过uniq -c 处理之后的数据格式形如”2 data”，第一个字段是数字，表示重复的记录数；第二个字段为记录的内容。我们将对此内容进行排序。<br>sort -k 1表示对于每行的第一个字段进行排序，这里即指代表重复记录数的那个字段。因为sort命令的默认排序是按照ASCII，这就会导致按从大到小进行排序时，数值2会排在数值11的前面，所以需要使用-n 参数指定sort命令按照数值大小进行排序。-r 表示逆序，即按照从大到小的顺序进行排序。</p><p>wc命令</p><p>wc命令的功能为统计指定文件中的字节数、字数、行数, 并将统计结果显示输出。</p><p>语法：wc [选项] 文件…</p><p>说明：该命令统计给定文件中的字节数、字数、行数。如果没有给出文件名，则从标准输入读取。wc同时也给出所有指定文件的总统计数。字是由空格字符区分开的最大字符串。</p><p>该命令各选项含义如下：</p><p>　　- c 统计字节数。</p><p>　　- l 统计行数。</p><p>　　- w 统计字数</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://wuzhangshu927.blog.163.com/blog/static/114224687201171941937445/" target="_blank" rel="external">http://wuzhangshu927.blog.163.com/blog/static/114224687201171941937445/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;liunx服务器上生成的日志文件进行分析，文件格式如下：&lt;br&gt;id               time&lt;br&gt;1001,2011-08-19 00:00:00&lt;br&gt;1002,2011-08-19 01:00:00&lt;br&gt;1001,2011-08-19 02:00:00
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.codr.top/categories/Linux/"/>
    
    
      <category term="命令" scheme="http://www.codr.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>nginx添加日志分割logrotate</title>
    <link href="http://www.codr.top/2017/10/nginx%E6%B7%BB%E5%8A%A0%E6%97%A5%E5%BF%97%E5%88%86%E5%89%B2/"/>
    <id>http://www.codr.top/2017/10/nginx添加日志分割/</id>
    <published>2017-10-14T01:45:11.000Z</published>
    <updated>2017-10-17T02:44:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="logrotate简介"><a href="#logrotate简介" class="headerlink" title="logrotate简介"></a>logrotate简介</h2><p>logrotate 是Linux系统日志文件管理工具。用来把旧的日志文件删除，并创建新的日志文件，我们把它叫做“转储”。可以根据日志文件的大小，也可以根据其天数来转储，这个过程一般通过 cron 程序来执行。<br>logrotate 程序还可以用于压缩日志文件，以及发送日志到指定的E-mail。<br>默认的logrotate被加入cron的/etc/cron.daily中作为每日任务执行。<br>/etc/logrotate.d/* 为/etc/logrotate.conf默认包含目录其中文件也会被logrotate读取。指明每个日志文件的特定规则。<br>/var/lib/logrotate/status中默认记录logrotate上次轮换日志文件的时间。</p><h2 id="logrotate安装"><a href="#logrotate安装" class="headerlink" title="logrotate安装"></a>logrotate安装</h2><p>centos是默认有安装<br>yum install logrotate<br>安装完成之后在，在/etc/logrotate.d/有以下脚本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ ll /etc/logrotate.d/</div><div class="line">total 24</div><div class="line">drwxr-xr-x. 2 root root 4096 Mar  3  2016 2016-03-03</div><div class="line">-rw-r--r--. 1 root root  103 Jul 14  2015 dracut</div><div class="line">-rw-r--r--  1 root root  217 Oct 31  2016 nginx</div><div class="line">-rw-r--r--. 1 root root  329 Jul 17  2012 psacct</div><div class="line">-rw-r--r--. 1 root root  265 Mar  3  2016 syslog</div><div class="line">-rw-r--r--. 1 root root  100 Feb 22  2013 yum</div></pre></td></tr></table></figure></p><h2 id="运行机制"><a href="#运行机制" class="headerlink" title="运行机制"></a>运行机制</h2><p>crontab会每天定时执行/etc/cron.daily目录下的脚本，在这个目录有个logrotate脚本，脚本内容为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line"></div><div class="line">/usr/sbin/logrotate /etc/logrotate.conf &gt;/dev/null 2&gt;&amp;1</div><div class="line">EXITVALUE=$?</div><div class="line">if [ $EXITVALUE != 0 ]; then</div><div class="line">    /usr/bin/logger -t logrotate &quot;ALERT exited abnormally with [$EXITVALUE]&quot;</div><div class="line">fi</div><div class="line">exit 0</div></pre></td></tr></table></figure></p><p>每天执行一次/usr/sbin/logrotate /etc/logrotate.conf，logrotate.conf中<code>include /etc/logrotate.d</code> </p><h2 id="nginx脚本"><a href="#nginx脚本" class="headerlink" title="nginx脚本"></a>nginx脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">/var/log/nginx/*log &#123;</div><div class="line">    daily</div><div class="line">    rotate 10</div><div class="line">    missingok</div><div class="line">    notifempty</div><div class="line">    compress</div><div class="line">    sharedscripts</div><div class="line">    postrotate</div><div class="line">        /bin/kill -USR1 $(cat /var/run/nginx.pid 2&gt;/dev/null) 2&gt;/dev/null || :</div><div class="line">    endscript</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">compress                        通过gzip压缩转储以后的日志</div><div class="line">nocompress                      不压缩</div><div class="line">copytruncate                    用于还在打开中的日志文件，把当前日志备份并截断</div><div class="line">nocopytruncate                  备份日志文件但是不截断</div><div class="line">create mode owner group         转储文件，使用指定的文件模式创建新的日志文件</div><div class="line">nocreate                        不建立新的日志文件</div><div class="line">delaycompress 和 compress        一起使用时，转储的日志文件到下一次转储时才压缩</div><div class="line">nodelaycompress                 覆盖 delaycompress 选项，转储同时压缩。</div><div class="line">errors address                   专储时的错误信息发送到指定的Email 地址</div><div class="line">ifempty                         即使是空文件也转储，这个是 logrotate 的缺省选项。</div><div class="line">notifempty                      如果是空文件的话，不转储</div><div class="line">mail address                    把转储的日志文件发送到指定的E-mail 地址</div><div class="line">nomail                          转储时不发送日志文件</div><div class="line">olddir directory                转储后的日志文件放入指定的目录，必须和当前日志文件在同一个文件系统</div><div class="line">noolddir                        转储后的日志文件和当前日志文件放在同一个目录下</div><div class="line">prerotate/endscript             在转储以前需要执行的命令可以放入这个对，这两个关键字必须单独成行</div><div class="line">postrotate/endscript            在转储以后需要执行的命令可以放入这个对，这两个关键字必须单独成行</div><div class="line">daily                           指定转储周期为每天</div><div class="line">weekly                          指定转储周期为每周</div><div class="line">monthly                         指定转储周期为每月</div><div class="line">rotate count                    指定日志文件删除之前转储的次数，0 指没有备份，5 指保留5 个备份</div><div class="line">tabootext [+] list 让logrotate   不转储指定扩展名的文件，缺省的扩展名是：.rpm-orig, .rpmsave, v, 和 ~ </div><div class="line">size size                       当日志文件到达指定的大小时才转储，bytes(缺省)及KB(sizek)或MB(sizem)</div></pre></td></tr></table></figure><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><p>立刻执行分割：/usr/sbin/logrotate -vf  /etc/logrotate.d/nginx<br>查看执行状态 cat /var/lib/logrotate.status</p><h2 id="添加定时任务"><a href="#添加定时任务" class="headerlink" title="添加定时任务"></a>添加定时任务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">crontab -e </div><div class="line">#添加以下代码， #每天凌晨定时执行脚本</div><div class="line"># crond-id-02:nginx_logs logroate</div><div class="line">0 0 * * * /usr/sbin/logrotate -vf /etc/logrotate.d/nginx &gt;/dev/null 2&gt;&amp;1</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;logrotate简介&quot;&gt;&lt;a href=&quot;#logrotate简介&quot; class=&quot;headerlink&quot; title=&quot;logrotate简介&quot;&gt;&lt;/a&gt;logrotate简介&lt;/h2&gt;&lt;p&gt;logrotate 是Linux系统日志文件管理工具。用来把旧的日志
      
    
    </summary>
    
      <category term="nginx" scheme="http://www.codr.top/categories/nginx/"/>
    
    
      <category term="nginx" scheme="http://www.codr.top/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux 命令: 运行远程命令</title>
    <link href="http://www.codr.top/2017/10/Linux-%E5%91%BD%E4%BB%A4-%E8%BF%90%E8%A1%8C%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.codr.top/2017/10/Linux-命令-运行远程命令/</id>
    <published>2017-10-13T09:58:34.000Z</published>
    <updated>2017-10-14T02:49:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="运行远程命令"><a href="#运行远程命令" class="headerlink" title="运行远程命令"></a>运行远程命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">➜ ~ ssh root@dev &quot;ls /mydata&quot;</div><div class="line">apps</div><div class="line">develop</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;运行远程命令&quot;&gt;&lt;a href=&quot;#运行远程命令&quot; class=&quot;headerlink&quot; title=&quot;运行远程命令&quot;&gt;&lt;/a&gt;运行远程命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.codr.top/categories/Linux/"/>
    
    
      <category term="命令" scheme="http://www.codr.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Linux 命令：查看文件夹下文件大小</title>
    <link href="http://www.codr.top/2017/10/Linux-%E5%91%BD%E4%BB%A4%EF%BC%9A%E6%9F%A5%E7%9C%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F/"/>
    <id>http://www.codr.top/2017/10/Linux-命令：查看文件夹下文件大小/</id>
    <published>2017-10-13T07:48:34.000Z</published>
    <updated>2017-10-14T02:49:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="查看文件夹下文件大小"><a href="#查看文件夹下文件大小" class="headerlink" title="查看文件夹下文件大小"></a>查看文件夹下文件大小</h2><p>du [-abcDhHklmsSx] [-L &lt;符号连接&gt;][-X &lt;文件&gt;][–block-size][–exclude=&lt;目录或文件&gt;] [–max-depth=&lt;目录层数&gt;][–help][–version][目录或文件]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">du -h --max-depth=1 /mydata/</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;查看文件夹下文件大小&quot;&gt;&lt;a href=&quot;#查看文件夹下文件大小&quot; class=&quot;headerlink&quot; title=&quot;查看文件夹下文件大小&quot;&gt;&lt;/a&gt;查看文件夹下文件大小&lt;/h2&gt;&lt;p&gt;du [-abcDhHklmsSx] [-L &amp;lt;符号连接&amp;gt;][-
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.codr.top/categories/Linux/"/>
    
    
      <category term="命令" scheme="http://www.codr.top/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>docker-part5:Stacks</title>
    <link href="http://www.codr.top/2017/10/docker-part5-Stacks/"/>
    <id>http://www.codr.top/2017/10/docker-part5-Stacks/</id>
    <published>2017-10-11T05:46:28.000Z</published>
    <updated>2017-10-11T06:21:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="新增一个服务（service）visualizer"><a href="#新增一个服务（service）visualizer" class="headerlink" title="新增一个服务（service）visualizer"></a>新增一个服务（service）visualizer</h2><p>修改docker-compose.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">version: &quot;3&quot;</div><div class="line">services:</div><div class="line">  web:</div><div class="line">    # replace username/repo:tag with your name and image details</div><div class="line">    image: username/repo:tag</div><div class="line">    deploy:</div><div class="line">      replicas: 5</div><div class="line">      restart_policy:</div><div class="line">        condition: on-failure</div><div class="line">      resources:</div><div class="line">        limits:</div><div class="line">          cpus: &quot;0.1&quot;</div><div class="line">          memory: 50M</div><div class="line">    ports:</div><div class="line">      - &quot;80:80&quot;</div><div class="line">    networks:</div><div class="line">      - webnet</div><div class="line">  visualizer:</div><div class="line">    image: dockersamples/visualizer:stable</div><div class="line">    ports:</div><div class="line">      - &quot;8080:8080&quot;</div><div class="line">    volumes:</div><div class="line">      - &quot;/var/run/docker.sock:/var/run/docker.sock&quot;</div><div class="line">    deploy:</div><div class="line">      placement:</div><div class="line">        constraints: [node.role == manager]</div><div class="line">    networks:</div><div class="line">      - webnet</div><div class="line">networks:</div><div class="line">  webnet:</div></pre></td></tr></table></figure></p><p>更新服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">➜  docker-test docker stack deploy -c docker-compose.yml getstartedlab</div><div class="line">Creating network getstartedlab_webnet</div><div class="line">Creating service getstartedlab_web</div><div class="line">Creating service getstartedlab_visualizer</div><div class="line"></div><div class="line">➜  docker-test docker-machine ls</div><div class="line">NAME    ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS</div><div class="line">myvm1   *        virtualbox   Running   tcp://192.168.99.100:2376           v17.09.0-ce</div><div class="line">myvm2   -        virtualbox   Running   tcp://192.168.99.101:2376           v17.09.0-ce</div></pre></td></tr></table></figure></p><p>访问 <a href="http://192.168.99.100:8080/" target="_blank" rel="external">http://192.168.99.100:8080/</a></p><h2 id="持久化redis数据服务"><a href="#持久化redis数据服务" class="headerlink" title="持久化redis数据服务"></a>持久化redis数据服务</h2><p>修改docker-compose.yml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">version: &quot;3&quot;</div><div class="line">services:</div><div class="line">  web:</div><div class="line">    # replace username/repo:tag with your name and image details</div><div class="line">    image: 842071912/start-docker1:hellopy</div><div class="line">    deploy:</div><div class="line">      replicas: 5</div><div class="line">      resources:</div><div class="line">        limits:</div><div class="line">          cpus: &quot;0.1&quot;</div><div class="line">          memory: 50M</div><div class="line">      restart_policy:</div><div class="line">        condition: on-failure</div><div class="line">    ports:</div><div class="line">      - &quot;80:80&quot;</div><div class="line">    networks:</div><div class="line">      - webnet</div><div class="line">  visualizer:</div><div class="line">    image: dockersamples/visualizer:stable</div><div class="line">    ports:</div><div class="line">      - &quot;8080:8080&quot;</div><div class="line">    volumes:</div><div class="line">      - &quot;/var/run/docker.sock:/var/run/docker.sock&quot;</div><div class="line">    deploy:</div><div class="line">      placement:</div><div class="line">        constraints: [node.role == manager]</div><div class="line">    networks:</div><div class="line">      - webnet</div><div class="line">  redis:</div><div class="line">    image: redis</div><div class="line">    ports:</div><div class="line">      - &quot;6379:6379&quot;</div><div class="line">    volumes:</div><div class="line">      - /home/docker/data:/data</div><div class="line">    deploy:</div><div class="line">      placement:</div><div class="line">        constraints: [node.role == manager]</div><div class="line">    command: redis-server --appendonly yes</div><div class="line">    networks:</div><div class="line">      - webnet</div><div class="line">networks:</div><div class="line">  webnet:</div></pre></td></tr></table></figure></p><p>创建./data文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">➜  docker-test docker-machine ssh myvm1 &quot;mkdir ./data&quot;</div><div class="line"></div><div class="line">➜  docker-test docker stack deploy -c docker-compose.yml getstartedlab</div><div class="line">Updating service getstartedlab_web (id: p3yof4klife0ulvn7fqwjrhkm)</div><div class="line">Updating service getstartedlab_visualizer (id: s550x4sifn20ab391fsywu0l2)</div><div class="line">Updating service getstartedlab_redis (id: a2eh1a3c3di608fsa00l7uvj8)</div><div class="line"></div><div class="line">➜  docker-test docker service ls</div><div class="line">ID                  NAME                       MODE                REPLICAS            IMAGE                             PORTS</div><div class="line">a2eh1a3c3di6        getstartedlab_redis        replicated          1/1                 redis:latest                      *:6379-&gt;6379/tcp</div><div class="line">s550x4sifn20        getstartedlab_visualizer   replicated          1/1                 dockersamples/visualizer:stable   *:8080-&gt;8080/tcp</div><div class="line">p3yof4klife0        getstartedlab_web          replicated          5/5                 842071912/start-docker1:hellopy   *:80-&gt;80/tcp</div></pre></td></tr></table></figure></p><p>访问 <a href="http://192.168.99.100:8080/" target="_blank" rel="external">http://192.168.99.100:8080/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;新增一个服务（service）visualizer&quot;&gt;&lt;a href=&quot;#新增一个服务（service）visualizer&quot; class=&quot;headerlink&quot; title=&quot;新增一个服务（service）visualizer&quot;&gt;&lt;/a&gt;新增一个服务（serv
      
    
    </summary>
    
      <category term="docker" scheme="http://www.codr.top/categories/docker/"/>
    
    
      <category term="docker" scheme="http://www.codr.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker-part4:swarms</title>
    <link href="http://www.codr.top/2017/10/docker-part4-swarms/"/>
    <id>http://www.codr.top/2017/10/docker-part4-swarms/</id>
    <published>2017-10-11T02:16:18.000Z</published>
    <updated>2017-10-11T05:30:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置swarm"><a href="#设置swarm" class="headerlink" title="设置swarm"></a>设置swarm</h2><p>mac系统下需要安装 <a href="https://www.virtualbox.org/wiki/Downloads" target="_blank" rel="external">install Oracle VirtualBox</a> </p><h3 id="创建集群"><a href="#创建集群" class="headerlink" title="创建集群"></a>创建集群</h3><p>使用docker-machine创建VMs,创建有可能会失败多执行几次<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">➜  docker-test docker-machine ls</div><div class="line">NAME   ACTIVE   DRIVER   STATE   URL   SWARM   DOCKER   ERRORS</div><div class="line"></div><div class="line">➜  docker-test docker-machine create --driver virtualbox myvm1</div><div class="line">Running pre-create checks...</div><div class="line">(myvm1) No default Boot2Docker ISO found locally, downloading the latest release...</div><div class="line">(myvm1) Latest release for github.com/boot2docker/boot2docker is v17.09.0-ce</div><div class="line">(myvm1) Downloading /Users/hanqingsong/.docker/machine/cache/boot2docker.iso from https://github.com/boot2docker/boot2docker/releases/download/v17.09.0-ce/boot2docker.iso...</div><div class="line">(myvm1) 0%....10%....20%....30%....40%....50%....60%....70%....80%....90%....100%</div><div class="line">Creating machine...</div><div class="line">(myvm1) Copying /Users/hanqingsong/.docker/machine/cache/boot2docker.iso to /Users/hanqingsong/.docker/machine/machines/myvm1/boot2docker.iso...</div><div class="line">(myvm1) Creating VirtualBox VM...</div><div class="line">(myvm1) Creating SSH key...</div><div class="line">(myvm1) Starting the VM...</div><div class="line">(myvm1) Check network to re-create if needed...</div><div class="line">(myvm1) Found a new host-only adapter: &quot;vboxnet0&quot;</div><div class="line">(myvm1) Waiting for an IP...</div><div class="line">Waiting for machine to be running, this may take a few minutes...</div><div class="line">Detecting operating system of created instance...</div><div class="line">Waiting for SSH to be available...</div><div class="line">Detecting the provisioner...</div><div class="line">Provisioning with boot2docker...</div><div class="line">Copying certs to the local machine directory...</div><div class="line">Copying certs to the remote machine...</div><div class="line">Setting Docker configuration on the remote daemon...</div><div class="line">Checking connection to Docker...</div><div class="line">Docker is up and running!</div><div class="line">To see how to connect your Docker Client to the Docker Engine running on this virtual machine, run: docker-machine env myvm1</div><div class="line"></div><div class="line">➜  docker-test docker-machine ls</div><div class="line">NAME    ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS</div><div class="line">myvm1   -        virtualbox   Running   tcp://192.168.99.100:2376           v17.09.0-ce</div><div class="line">myvm2   -        virtualbox   Running   tcp://192.168.99.101:2376           v17.09.0-ce</div></pre></td></tr></table></figure></p><h3 id="初始化swarm添加节点"><a href="#初始化swarm添加节点" class="headerlink" title="初始化swarm添加节点"></a>初始化swarm添加节点</h3><p>设置myvm1为swarm管理者<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">➜  docker-test docker-machine ssh myvm1 &quot;docker swarm init --advertise-addr 192.168.99.100&quot; </div><div class="line">Swarm initialized: current node (mwshg3zvljp17muqpuua5l3d1) is now a manager.</div><div class="line"></div><div class="line">To add a worker to this swarm, run the following command:</div><div class="line"></div><div class="line">    docker swarm join --token SWMTKN-1-26jjkt2i3rul2qp7hwdp2m3ek1vegmumr6mk07ba8orc886ix2-c41i1zkhtnjqartdv6l75ms8h 192.168.99.100:2377</div><div class="line"></div><div class="line">To add a manager to this swarm, run &apos;docker swarm join-token manager&apos; and follow the instructions.</div></pre></td></tr></table></figure></p><p>myvm2添加为worker<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">➜  docker-test docker-machine ssh myvm2  &quot;docker swarm join --token SWMTKN-1-26jjkt2i3rul2qp7hwdp2m3ek1vegmumr6mk07ba8orc886ix2-c41i1zkhtnjqartdv6l75ms8h 192.168.99.100:2377&quot;</div><div class="line">This node joined a swarm as a worker.</div></pre></td></tr></table></figure></p><h3 id="查看swarm节点"><a href="#查看swarm节点" class="headerlink" title="查看swarm节点"></a>查看swarm节点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">➜  docker-test docker-machine ssh myvm1 &quot;docker node ls&quot;</div><div class="line">ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS</div><div class="line">mwshg3zvljp17muqpuua5l3d1 *   myvm1               Ready               Active              Leader</div><div class="line">urdtegb3yanqi0d98vzm49tof     myvm2               Ready               Active</div></pre></td></tr></table></figure><h2 id="在swarm集群部署应用"><a href="#在swarm集群部署应用" class="headerlink" title="在swarm集群部署应用"></a>在swarm集群部署应用</h2><p>设置myvm1为激活状态<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">➜  docker-test docker-machine env myvm1</div><div class="line">export DOCKER_TLS_VERIFY=&quot;1&quot;</div><div class="line">export DOCKER_HOST=&quot;tcp://192.168.99.100:2376&quot;</div><div class="line">export DOCKER_CERT_PATH=&quot;/Users/hanqingsong/.docker/machine/machines/myvm1&quot;</div><div class="line">export DOCKER_MACHINE_NAME=&quot;myvm1&quot;</div><div class="line"># Run this command to configure your shell:</div><div class="line"># eval $(docker-machine env myvm1)</div><div class="line"></div><div class="line">➜  docker-test eval $(docker-machine env myvm1)</div><div class="line"></div><div class="line">➜  docker-test docker-machine ls</div><div class="line">NAME    ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS</div><div class="line">myvm1   *        virtualbox   Running   tcp://192.168.99.100:2376           v17.09.0-ce</div><div class="line">myvm2   -        virtualbox   Running   tcp://192.168.99.101:2376           v17.09.0-ce</div></pre></td></tr></table></figure></p><p>在swarm manager部署应用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">➜  docker-test docker stack deploy -c docker-compose.yml getstartedlab</div><div class="line">Creating network getstartedlab_webnet</div><div class="line">Creating service getstartedlab_web</div></pre></td></tr></table></figure></p><p>查看服务部署信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">➜  docker-test docker stack ps getstartedlab</div><div class="line">ID                  NAME                  IMAGE                             NODE                DESIRED STATE       CURRENT STATE                  ERROR               PORTS</div><div class="line">qvs0h0pqgsou        getstartedlab_web.1   842071912/start-docker1:hellopy   myvm1               Running             Preparing about a minute ago</div><div class="line">jtlfqsejqnmo        getstartedlab_web.2   842071912/start-docker1:hellopy   myvm2               Running             Running 24 seconds ago</div><div class="line">wauh0t4cybvn        getstartedlab_web.3   842071912/start-docker1:hellopy   myvm1               Running             Preparing about a minute ago</div><div class="line">feyi52iwjpa2        getstartedlab_web.4   842071912/start-docker1:hellopy   myvm2               Running             Running 24 seconds ago</div><div class="line">m7mz2kevh15r        getstartedlab_web.5   842071912/start-docker1:hellopy   myvm2               Running             Running 24 seconds ago</div></pre></td></tr></table></figure></p><h2 id="清除和重启"><a href="#清除和重启" class="headerlink" title="清除和重启"></a>清除和重启</h2><p> tear down the stack<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"> ➜  docker-test docker stack rm getstartedlab</div><div class="line">Removing service getstartedlab_web</div><div class="line">Removing network getstartedlab_webnet</div></pre></td></tr></table></figure></p><blockquote><p>Keep the swarm or remove it?<br>At some point later, you can remove this swarm if you want to with docker-machine ssh myvm2 “docker swarm leave” on the worker and docker-machine ssh myvm1 “docker swarm leave –force” on the manager, but you’ll need this swarm for part 5, so please keep it around for now. </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">➜  docker-test eval $(docker-machine env -u)</div><div class="line"></div><div class="line"></div><div class="line">➜  docker-test docker-machine stop $(docker-machine ls -q)</div><div class="line">Stopping &quot;myvm2&quot;...</div><div class="line">Stopping &quot;myvm1&quot;...</div><div class="line">Machine &quot;myvm2&quot; was stopped.</div><div class="line">Machine &quot;myvm1&quot; was stopped.</div><div class="line">➜  docker-test docker-machine ls</div><div class="line">NAME    ACTIVE   DRIVER       STATE     URL   SWARM   DOCKER    ERRORS</div><div class="line">myvm1   -        virtualbox   Stopped                 Unknown</div><div class="line">myvm2   -        virtualbox   Stopped                 Unknown</div></pre></td></tr></table></figure><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">docker-machine create --driver virtualbox myvm1 # Create a VM (Mac, Win7, Linux)</div><div class="line">docker-machine create -d hyperv --hyperv-virtual-switch &quot;myswitch&quot; myvm1 # Win10</div><div class="line">docker-machine env myvm1                # View basic information about your node</div><div class="line">docker-machine ssh myvm1 &quot;docker node ls&quot;         # List the nodes in your swarm</div><div class="line">docker-machine ssh myvm1 &quot;docker node inspect &lt;node ID&gt;&quot;        # Inspect a node</div><div class="line">docker-machine ssh myvm1 &quot;docker swarm join-token -q worker&quot;   # View join token</div><div class="line">docker-machine ssh myvm1   # Open an SSH session with the VM; type &quot;exit&quot; to end</div><div class="line">docker-machine ssh myvm2 &quot;docker swarm leave&quot;  # Make the worker leave the swarm</div><div class="line">docker-machine ssh myvm1 &quot;docker swarm leave -f&quot; # Make master leave, kill swarm</div><div class="line">docker-machine start myvm1            # Start a VM that is currently not running</div><div class="line">docker-machine stop $(docker-machine ls -q)               # Stop all running VMs</div><div class="line">docker-machine rm $(docker-machine ls -q) # Delete all VMs and their disk images</div><div class="line">docker-machine scp docker-compose.yml myvm1:~     # Copy file to node&apos;s home dir</div><div class="line">docker-machine ssh myvm1 &quot;docker stack deploy -c &lt;file&gt; &lt;app&gt;&quot;   # Deploy an app</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;设置swarm&quot;&gt;&lt;a href=&quot;#设置swarm&quot; class=&quot;headerlink&quot; title=&quot;设置swarm&quot;&gt;&lt;/a&gt;设置swarm&lt;/h2&gt;&lt;p&gt;mac系统下需要安装 &lt;a href=&quot;https://www.virtualbox.org/wik
      
    
    </summary>
    
      <category term="docker" scheme="http://www.codr.top/categories/docker/"/>
    
    
      <category term="docker" scheme="http://www.codr.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker-part3:services</title>
    <link href="http://www.codr.top/2017/10/docker-part3-services/"/>
    <id>http://www.codr.top/2017/10/docker-part3-services/</id>
    <published>2017-10-11T01:45:11.000Z</published>
    <updated>2017-10-11T02:13:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h2><p>docker-compose.yml定义了容器的行为。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">version: &quot;3&quot;</div><div class="line">services:</div><div class="line">  web:</div><div class="line">    # replace username/repo:tag with your name and image details</div><div class="line">    image: username/repo:tag</div><div class="line">    deploy:</div><div class="line">      replicas: 5</div><div class="line">      resources:</div><div class="line">        limits:</div><div class="line">          cpus: &quot;0.1&quot;</div><div class="line">          memory: 50M</div><div class="line">      restart_policy:</div><div class="line">        condition: on-failure</div><div class="line">    ports:</div><div class="line">      - &quot;80:80&quot;</div><div class="line">    networks:</div><div class="line">      - webnet</div><div class="line">networks:</div><div class="line">  webnet:</div></pre></td></tr></table></figure><h2 id="运行负载均衡应用"><a href="#运行负载均衡应用" class="headerlink" title="运行负载均衡应用"></a>运行负载均衡应用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">➜  docker-test docker swarm init</div><div class="line">Swarm initialized: current node (scxmr99cp0d6zjpajrckdktmk) is now a manager.</div><div class="line"></div><div class="line">To add a worker to this swarm, run the following command:</div><div class="line"></div><div class="line">    docker swarm join --token SWMTKN-1-19wb8qe3cws960d8famp2lix8t1d6wza4eg9fw7geklefqjrvh-82wzkvoszligqto4eoe2ufail 192.168.65.2:2377</div><div class="line"></div><div class="line">To add a manager to this swarm, run &apos;docker swarm join-token manager&apos; and follow the instructions.</div><div class="line"></div><div class="line">➜  docker-test docker stack deploy -c docker-compose.yml getstartedlab</div><div class="line">Creating network getstartedlab_webnet</div><div class="line">Creating service getstartedlab_web</div><div class="line"></div><div class="line">➜  docker-test docker service ls</div><div class="line">ID                  NAME                MODE                REPLICAS            IMAGE                             PORTS</div><div class="line">lrd7bsarm31c        getstartedlab_web   replicated          5/5                 842071912/start-docker1:hellopy   *:80-&gt;80/tcp</div><div class="line"></div><div class="line">➜  docker-test docker stack ls</div><div class="line">NAME                SERVICES</div><div class="line">getstartedlab       1</div><div class="line"></div><div class="line">➜  docker-test docker service ps lrd7bsarm31c</div><div class="line">ID                  NAME                  IMAGE                             NODE                DESIRED STATE       CURRENT STATE           ERROR               PORTS</div><div class="line">pv0xalnz0jub        getstartedlab_web.1   842071912/start-docker1:hellopy   moby                Running             Running 2 minutes ago</div><div class="line">qrkj0dctgukn        getstartedlab_web.2   842071912/start-docker1:hellopy   moby                Running             Running 2 minutes ago</div><div class="line">xq97vphe37h5        getstartedlab_web.3   842071912/start-docker1:hellopy   moby                Running             Running 2 minutes ago</div><div class="line">kc0kj4tdzlpz        getstartedlab_web.4   842071912/start-docker1:hellopy   moby                Running             Running 2 minutes ago</div><div class="line">5roeqr1o8le3        getstartedlab_web.5   842071912/start-docker1:hellopy   moby                Running             Running 2 minutes ago</div><div class="line"></div><div class="line">➜  docker-test docker container ls -q</div><div class="line">3b010bc1ba11</div><div class="line">e9c89868d2ee</div><div class="line">34cc4a84736a</div><div class="line">b697e352c205</div><div class="line">92db487d0025</div><div class="line"></div><div class="line">➜  docker-test docker stack rm getstartedlab</div><div class="line">Removing service getstartedlab_web</div><div class="line">Removing network getstartedlab_webnet</div><div class="line"></div><div class="line">➜  docker-test docker node ls</div><div class="line">ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS</div><div class="line">scxmr99cp0d6zjpajrckdktmk *   moby                Ready               Active              Leader</div><div class="line"></div><div class="line">➜  docker-test docker swarm leave --force</div><div class="line">Node left the swarm.</div><div class="line">➜  docker-test docker node ls</div><div class="line">Error response from daemon: This node is not a swarm manager. Use &quot;docker swarm init&quot; or &quot;docker swarm join&quot; to connect this node to swarm and try again.</div></pre></td></tr></table></figure><h2 id="命令集"><a href="#命令集" class="headerlink" title="命令集"></a>命令集</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">docker swarm init</div><div class="line">docker stack ls                                            # List stacks or apps</div><div class="line">docker stack deploy -c &lt;composefile&gt; &lt;appname&gt;  # Run the specified Compose file</div><div class="line">docker service ls                 # List running services associated with an app</div><div class="line">docker service ps &lt;service&gt;                  # List tasks associated with an app</div><div class="line">docker inspect &lt;task or container&gt;                   # Inspect task or container</div><div class="line">docker container ls -q                                      # List container IDs</div><div class="line">docker stack rm &lt;appname&gt;                             # Tear down an application</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;docker-compose-yml&quot;&gt;&lt;a href=&quot;#docker-compose-yml&quot; class=&quot;headerlink&quot; title=&quot;docker-compose.yml&quot;&gt;&lt;/a&gt;docker-compose.yml&lt;/h2&gt;&lt;p&gt;docker
      
    
    </summary>
    
      <category term="docker" scheme="http://www.codr.top/categories/docker/"/>
    
    
      <category term="docker" scheme="http://www.codr.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>二进制数组转十六进制</title>
    <link href="http://www.codr.top/2017/10/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E7%BB%84%E8%BD%AC%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6/"/>
    <id>http://www.codr.top/2017/10/二进制数组转十六进制/</id>
    <published>2017-10-10T08:53:07.000Z</published>
    <updated>2017-10-10T09:13:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="二进制数组转十六进制"><a href="#二进制数组转十六进制" class="headerlink" title="二进制数组转十六进制"></a>二进制数组转十六进制</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">private static String byte2hex(byte [] buffer)&#123;</div><div class="line">    String h = &quot;&quot;;</div><div class="line"></div><div class="line">    for(int i = 0; i &lt; buffer.length; i++)&#123;</div><div class="line">        String temp = Integer.toHexString(buffer[i] &amp; 0xFF);</div><div class="line">        if(temp.length() == 1)&#123;</div><div class="line">            temp = &quot;0&quot; + temp;</div><div class="line">        &#125;</div><div class="line">        h = h + &quot; &quot;+ temp;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    return h;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="二进制输出二进制字符串"><a href="#二进制输出二进制字符串" class="headerlink" title="二进制输出二进制字符串"></a>二进制输出二进制字符串</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">private static String byte2Str(byte [] buffer)&#123;</div><div class="line">    String h = &quot;&quot;;</div><div class="line"></div><div class="line">    for(int i = 0; i &lt; buffer.length; i++)&#123;</div><div class="line">        String temp = Integer.toBinaryString(buffer[i]);</div><div class="line">        h = h + &quot; &quot;+ temp;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    return h;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;二进制数组转十六进制&quot;&gt;&lt;a href=&quot;#二进制数组转十六进制&quot; class=&quot;headerlink&quot; title=&quot;二进制数组转十六进制&quot;&gt;&lt;/a&gt;二进制数组转十六进制&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
      <category term="java" scheme="http://www.codr.top/categories/java/"/>
    
    
      <category term="byte" scheme="http://www.codr.top/tags/byte/"/>
    
  </entry>
  
  <entry>
    <title>idea免费激活方法</title>
    <link href="http://www.codr.top/2017/10/idea%E5%85%8D%E8%B4%B9%E6%BF%80%E6%B4%BB%E6%96%B9%E6%B3%95/"/>
    <id>http://www.codr.top/2017/10/idea免费激活方法/</id>
    <published>2017-10-10T04:58:31.000Z</published>
    <updated>2017-10-10T04:59:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="获取注册码"><a href="#获取注册码" class="headerlink" title="获取注册码"></a>获取注册码</h2><p><a href="http://idea.lanyus.com/" target="_blank" rel="external">http://idea.lanyus.com/</a><br><a href="http://www.98key.com/idea" target="_blank" rel="external">http://www.98key.com/idea</a></p><h2 id="填入license-server"><a href="#填入license-server" class="headerlink" title="填入license server"></a>填入license server</h2><p><a href="http://intellij.mandroid.cn/" target="_blank" rel="external">http://intellij.mandroid.cn/</a><br><a href="http://idea.imsxm.com/" target="_blank" rel="external">http://idea.imsxm.com/</a><br><a href="http://idea.iteblog.com/key.php" target="_blank" rel="external">http://idea.iteblog.com/key.php</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;获取注册码&quot;&gt;&lt;a href=&quot;#获取注册码&quot; class=&quot;headerlink&quot; title=&quot;获取注册码&quot;&gt;&lt;/a&gt;获取注册码&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://idea.lanyus.com/&quot; target=&quot;_blank&quot; rel=&quot;ext
      
    
    </summary>
    
      <category term="工具" scheme="http://www.codr.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="idea" scheme="http://www.codr.top/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>mac 安装使用Docker</title>
    <link href="http://www.codr.top/2017/10/mac-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8Docker/"/>
    <id>http://www.codr.top/2017/10/mac-安装使用Docker/</id>
    <published>2017-10-09T06:28:36.000Z</published>
    <updated>2017-10-27T01:43:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docker安装与启动"><a href="#docker安装与启动" class="headerlink" title="docker安装与启动"></a>docker安装与启动</h2><p><a href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="external">docker官网地址</a>,下载dmg安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$ docker run hello-world</div><div class="line">Hello from Docker!</div><div class="line">This message shows that your installation appears to be working correctly.</div><div class="line"></div><div class="line">To generate this message, Docker took the following steps:</div><div class="line"> 1. The Docker client contacted the Docker daemon.</div><div class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</div><div class="line"> 3. The Docker daemon created a new container from that image which runs the</div><div class="line">    executable that produces the output you are currently reading.</div><div class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</div><div class="line">    to your terminal.</div><div class="line"></div><div class="line">$ docker --version</div></pre></td></tr></table></figure></p><h2 id="构建第一个app"><a href="#构建第一个app" class="headerlink" title="构建第一个app"></a>构建第一个app</h2><p><a href="https://docs.docker.com/get-started/part2/#apppy" target="_blank" rel="external">官网文档 Build app</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">$ ls</div><div class="line">Dockerfile      app.py          requirements.txt</div><div class="line"></div><div class="line">$ docker build -t friendlyhello .</div><div class="line">Sending build context to Docker daemon  4.608kB</div><div class="line">Step 1/7 : FROM python:2.7-slim</div><div class="line">2.7-slim: Pulling from library/python</div><div class="line"></div><div class="line">$ docker images</div><div class="line">REPOSITORY            TAG                 IMAGE ID</div><div class="line">friendlyhello         latest              326387cea398</div><div class="line"></div><div class="line">$ docker run -p 4000:80 friendlyhello </div><div class="line">或 docker run -d -p 4000:80 friendlyhello #-d 后台运行</div></pre></td></tr></table></figure><p>访问<a href="http://localhost:4000。" target="_blank" rel="external">http://localhost:4000。</a><br>CTRL+C退出</p><p>后台运行退出时<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ docker container ls #获取短CONTAINER ID</div><div class="line">$ docker stop id</div></pre></td></tr></table></figure></p><h2 id="分享image"><a href="#分享image" class="headerlink" title="分享image"></a>分享image</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">docker login</div><div class="line">docker tag image username/repository:tag #Tag the image</div><div class="line">比如：docker tag friendlyhello john/get-started:part2</div><div class="line"></div><div class="line">docker images</div><div class="line"></div><div class="line">docker push username/repository:tag #Publish the image</div><div class="line"></div><div class="line">docker run -p 4000:80 username/repository:tag #Pull and run the image from the remote repository</div></pre></td></tr></table></figure><h2 id="容器-amp-镜像命令列表"><a href="#容器-amp-镜像命令列表" class="headerlink" title="容器&amp;镜像命令列表"></a>容器&amp;镜像命令列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">docker build -t friendlyname .  # Create image using this directory&apos;s Dockerfile</div><div class="line">docker run -p 4000:80 friendlyname  # Run &quot;friendlyname&quot; mapping port 4000 to 80</div><div class="line">docker run -d -p 4000:80 friendlyname         # Same thing, but in detached mode</div><div class="line">docker container ls                                # List all running containers</div><div class="line">docker container ls -a             # List all containers, even those not running</div><div class="line">docker container stop &lt;hash&gt;           # Gracefully stop the specified container</div><div class="line">docker container kill &lt;hash&gt;         # Force shutdown of the specified container</div><div class="line">docker container rm &lt;hash&gt;        # Remove specified container from this machine</div><div class="line">docker container rm $(docker container ls -a -q)         # Remove all containers</div><div class="line">docker image ls -a                             # List all images on this machine</div><div class="line">docker image rm &lt;image id&gt;            # Remove specified image from this machine</div><div class="line">docker image rm $(docker image ls -a -q)   # Remove all images from this machine</div><div class="line">docker login             # Log in this CLI session using your Docker credentials</div><div class="line">docker tag &lt;image&gt; username/repository:tag  # Tag &lt;image&gt; for upload to registry</div><div class="line">docker push username/repository:tag            # Upload tagged image to registry</div><div class="line">docker run username/repository:tag                   # Run image from a registry</div></pre></td></tr></table></figure><h2 id="镜像的获取"><a href="#镜像的获取" class="headerlink" title="镜像的获取"></a>镜像的获取</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># 搜索镜像</div><div class="line">docker search &lt;image&gt; # 在docker index中搜索image</div><div class="line"># 下载镜像</div><div class="line">docker pull &lt;image&gt;  # 从docker registry server 中下拉image</div><div class="line"># 查看镜像 </div><div class="line">docker images： # 列出images</div><div class="line">docker images -a # 列出所有的images（包含历史）</div><div class="line">docker rmi  &lt;image ID&gt;： # 删除一个或多个image</div></pre></td></tr></table></figure><h2 id="容器的使用"><a href="#容器的使用" class="headerlink" title="容器的使用"></a>容器的使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># 查看容器</div><div class="line">    docker ps ：列出当前所有正在运行的container</div><div class="line">    docker ps -l ：列出最近一次启动的container</div><div class="line">    docker ps -a ：列出所有的container（包含历史，即运行过的container）</div><div class="line">    docker ps -q ：列出最近一次运行的container ID</div><div class="line"># 再次启动容器</div><div class="line">    docker start/stop/restart &lt;container&gt; #：开启/停止/重启container</div><div class="line">    docker start [container_id] #：再次运行某个container （包括历史container）</div><div class="line">#进入正在运行的docker容器</div><div class="line">    docker exec -it [container_id] /bin/bash</div><div class="line">    docker run -i -t -p &lt;host_port:contain_port&gt; #：映射 HOST 端口到容器，方便外部访问容器内服务，host_port 可以省略，省略表示把 container_port 映射到一个动态端口。</div><div class="line"></div><div class="line"># 删除容器</div><div class="line">    docker rm &lt;container...&gt; #：删除一个或多个container</div><div class="line">    docker rm `docker ps -a -q` #：删除所有的container</div><div class="line">    docker ps -a -q | xargs docker rm #：同上, 删除所有的container</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;docker安装与启动&quot;&gt;&lt;a href=&quot;#docker安装与启动&quot; class=&quot;headerlink&quot; title=&quot;docker安装与启动&quot;&gt;&lt;/a&gt;docker安装与启动&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://docs.docker.com/d
      
    
    </summary>
    
      <category term="docker" scheme="http://www.codr.top/categories/docker/"/>
    
    
      <category term="docker" scheme="http://www.codr.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>jvm 工具</title>
    <link href="http://www.codr.top/2017/10/jvm-%E5%B7%A5%E5%85%B7/"/>
    <id>http://www.codr.top/2017/10/jvm-工具/</id>
    <published>2017-10-09T02:34:46.000Z</published>
    <updated>2017-12-25T02:01:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><p>jps：主要用来输出JVM中运行的进程状态信息 (Java Virtual Machine Process Status Tool)、<br>jstack：主要用来查看某个Java进程内的线程堆栈信息<br>jmap：生成堆快照<br>jstat: 显示进程中的类装载、内存、垃圾收集、JIT编译等运行数据<br>jhat：html形式显示对象占用内存大小以及引用情况<br>jconsole（图形工具）<br>jvisualvm（图形工具）<br>MAT （第三方图形工具）</p><h2 id="jps"><a href="#jps" class="headerlink" title="jps"></a>jps</h2><p>jps主要用来输出JVM中运行的进程状态信息。语法格式如下：</p><blockquote><p>jps [options] [hostid]<br>-q 不输出类名、Jar名和传入main方法的参数<br>-m 输出传入main方法的参数<br>-l 输出main类或Jar的全限名<br>-v 输出传入JVM的参数</p></blockquote><h2 id="jstack"><a href="#jstack" class="headerlink" title="jstack"></a>jstack</h2><p>jstack主要用来查看某个Java进程内的线程堆栈信息。语法格式如下：</p><blockquote><p>jstack [option] pid<br>jstack [option] executable core<br>jstack [option] [server-id@]remote-hostname-or-ip<br>-l long listings，会打印出额外的锁信息，在发生死锁时可以用jstack -l pid来观察锁持有情况<br>-m mixed mode，不仅会输出Java堆栈信息，还会输出C/C++堆栈信息（比如Native方法）</p></blockquote><h2 id="jmap"><a href="#jmap" class="headerlink" title="jmap"></a>jmap</h2><blockquote><p>jmap -heap :当前堆内存分布信息，如From space, To Space等占用内存大小<br>jmap -histo : 当前堆中对象占用内存大小情况，柱状图数据结构组织。可以简单得定位下当前占用内存最大的几个对象<br>jmap -histo:live:先触发一次gc , 再统计对象占用内存情况。可以简单得定位下当前占用内存最大的几个对象以及对象是否可以被gc回收<br>jmap -dump:format=b,file=heapDump: 导出堆详细使用信息，b表示二进制文件，之后采用其他工具分析，如jhat,mat.非常详细，可分析到对象之间的引用关系等。</p></blockquote><h2 id="jstat"><a href="#jstat" class="headerlink" title="jstat"></a>jstat</h2><p>显示进程中的类装载、内存、垃圾收集、JIT编译等运行数据<br>目前感觉用上的都是gc记录查看，实际还没太用过</p><blockquote><p>jstat -gc 3331 250 20: 查询进程2764的垃圾收集情况，每250毫秒查询一次，一共查询20次。<br>jstat- gcause</p><p>S0C : survivor0区的总容量<br>S1C : survivor1区的总容量<br>S0U : survivor0区已使用的容量<br>S1U : survivor1区已使用的容量<br>EC : Eden区的总容量<br>EU : Eden区已使用的容量<br>OC : Old区的总容量<br>OU : Old区已使用的容量<br>PC  当前perm的容量 (KB)<br>PU  perm的使用 (KB)<br>YGC : 新生代垃圾回收次数<br>YGCT : 新生代垃圾回收时间<br>FGC : 老年代垃圾回收次数<br>FGCT : 老年代垃圾回收时间<br>GCT : 垃圾回收总消耗时间</p></blockquote><h2 id="jhat"><a href="#jhat" class="headerlink" title="jhat"></a>jhat</h2><p>可用来分析 jmap dump生成的堆信息二进制文件。html形式显示对象占用内存大小以及引用情况，但显示得并不友好。感觉比较鸡肋。</p><blockquote><p>jhat file</p></blockquote><h2 id="jconsole（图形工具）"><a href="#jconsole（图形工具）" class="headerlink" title="jconsole（图形工具）"></a>jconsole（图形工具）</h2><p>Jconsole（Java Monitoring and Management Console）从java5开始，在JDK中自带的java监控和管理控制台，用于对JVM中内存，线程和类等的监控</p><h2 id="jvisualvm（图形工具）"><a href="#jvisualvm（图形工具）" class="headerlink" title="jvisualvm（图形工具）"></a>jvisualvm（图形工具）</h2><p>用于查看 Java 虚拟机 (Java Virtual Machine, JVM) 上运行的基于 Java 技术的应用程序（Java 应用程序）的详细信息。</p><h2 id="MAT"><a href="#MAT" class="headerlink" title="MAT"></a>MAT</h2><p>MAT(Memory Analyzer Tool)，一个基于Eclipse的内存分析工具，是一个快速、功能丰富的Java heap分析工具，它可以帮助我们查找内存泄漏和减少内存消耗。</p><h2 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h2><p><a href="https://my.oschina.net/feichexia/blog/196575" target="_blank" rel="external">https://my.oschina.net/feichexia/blog/196575</a><br><a href="http://www.jianshu.com/p/6bbab921102b" target="_blank" rel="external">http://www.jianshu.com/p/6bbab921102b</a><br><a href="http://www.ityouknow.com/" target="_blank" rel="external">http://www.ityouknow.com/</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;常用工具&quot;&gt;&lt;a href=&quot;#常用工具&quot; class=&quot;headerlink&quot; title=&quot;常用工具&quot;&gt;&lt;/a&gt;常用工具&lt;/h2&gt;&lt;p&gt;jps：主要用来输出JVM中运行的进程状态信息 (Java Virtual Machine Process Status T
      
    
    </summary>
    
      <category term="java" scheme="http://www.codr.top/categories/java/"/>
    
    
      <category term="jvm" scheme="http://www.codr.top/tags/jvm/"/>
    
  </entry>
  
</feed>
